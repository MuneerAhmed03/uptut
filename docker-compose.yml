version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: library_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - library_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: library_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  uptut:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: uptut
    ports:
      - "3000:3000"
    env_file:
      - .env.example
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - APP_URL=${APP_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: 
      - library_network
    restart: unless-stopped

networks:
  library_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 